<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>remove_employee</id>
	<version>1.0.0</version>
	<initials>RME</initials>
	<title>Remove Employee</title>
	<icon>home</icon>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<!-- DATA -->
	<data type="enumeration_map">
		<id>database</id>
		<title>Database</title>
		<desc>Database of all users</desc>
		<options>
        </options>
	</data>
	<data type="button">
		<id>button_0</id>
		<title>Remove Employee</title>
		<action trigger="set">
			db: f.database,
			test: f.test;

			def groupId = findCase{it.processIdentifier.eq("org_group").and(it.author.id.eq(loggedUser().id))}?.stringId;
			def dbcase = findCase{it.processIdentifier.eq("${groupId}_1_database" as String)};
			def task = findTask{it.caseId.eq(dbcase.stringId) &amp; it.transitionId.eq("1")};
			
			setData(task, [
                "remove_handler": [
                    "value": db.value,
                    "type": "text"
                ]
			]);

			def data = getData(task);

			change db options {
				return data["enumeration_0"].options;
			}
		</action>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>2</id>
		<x>340</x>
		<y>220</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Remove Employee</label>
		<dataGroup>
			<id>DataGroup_0</id>
			<layout>grid</layout>
			<dataRef>
				<id>database</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>button_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
            <id>2_assign</id>
            <actions phase="post">
                <action>
					db: f.database;

					def groupId = findCase{it.processIdentifier.eq("org_group").and(it.author.id.eq(loggedUser().id))}?.stringId
					def dbcase = findCase{it.processIdentifier.eq("${groupId}_1_database" as String)}
					def task = findTask{it.caseId.eq(dbcase.stringId) &amp; it.transitionId.eq("1")}

                    def data = getData(task);

					change db options {
						return data["enumeration_0"].options;
					}
                </action>
            </actions>
        </event>
	</transition>
	<!-- PLACES -->
	<place>
		<id>1</id>
		<x>220</x>
		<y>220</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>3</id>
		<type>regular</type>
		<sourceId>1</sourceId>
		<destinationId>2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>
