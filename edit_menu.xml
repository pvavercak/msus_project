<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>menu_v3</id>
	<initials>MU3</initials>
	<title>Menu v3</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<!-- DATA -->
	<data type="text">
		<id>meal_name</id>
		<title>Meal Name</title>
		<desc>Provide meal name</desc>
	</data>
	<data type="number">
		<id>meal_price</id>
		<title>Price</title>
		<desc>Price of the meal</desc>
		<init>5</init>
		<action trigger="set">
			price: f.meal_price;
			def pomPrice = price.value as Double;
			if (0.0 > pomPrice) {
				change price value {
					return "0";
				}
			}
		</action>
	</data>
	<data type="enumeration_map">
		<id>menu_overview</id>
		<title>Menu</title>
		<desc>Menu overview</desc>
		<options>
        	<option key="Classical slovak dumplings">Meal: Classical slovak dumplings, Price: 5.00</option>
			<option key="Fried cheese">Meal: Fried cheese, Price: 3.80</option>
			<option key="Beef steak with rice and mushroom sausage">Meal: Chicken steak with rice and mushroom sausage, Price: 8.50</option>
			<option key="Grilled Cheeseburger">Meal: Grilled Cheeseburger, Price: 4.80</option>
			<option key="Apple Pie">Meal: Apple Pie, Price: 2.80</option>
			<option key="Chicken Stroganov">Meal: Chicken Stroganov, Price: 6.10</option>
        </options>
	</data>
	<data type="taskRef">
		<id>taskRef_0</id>
		<title>set label</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>69</id>
		<x>740</x>
		<y>460</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Add Meal</label>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>meal_name</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>meal_price</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>1_finish</id>
			<actions phase="pre">
				<action trigger="set">
					name: f.meal_name,
					price: f.meal_price,
					menu: f.menu_overview;

					def oldMenu = menu.options;
					oldMenu.put(name.value, "Meal: " + name.value + " , Price: " + price.value);
					change menu options {
						return oldMenu;
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>95</id>
		<x>860</x>
		<y>300</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Edit Meal</label>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>meal_name</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>meal_price</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>taskRef_0</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="finish">
			<id>2_finish</id>
			<actions phase="pre">
				<action trigger="set">
					name: f.meal_name,
					price: f.meal_price,
					menu: f.menu_overview;

					def oldMenu = menu.options;
					if (oldMenu.containsKey(name.value)) {
						oldMenu.put(name.value,"Meal: " + name.value + " , Price: " + price.value);
					}else{
						oldMenu.remove(menu.value);
						oldMenu.put(name.value,"Meal: " + name.value + " , Price: " + price.value);
					}

					change menu options {
						return oldMenu;
					}
				</action>
			</actions>
		</event>
		<event type="assign">
			<id>1_assign</id>
			<actions phase="post">
				<action trigger="set">
					tref: f.taskRef_0;

					def groupId = findCase{it.processIdentifier.eq("org_group").and(it.author.id.eq(loggedUser().id))}?.stringId
					def menucase = findCase{it.processIdentifier.eq("${groupId}_menu_v3" as String)}
					def task = findTask{it.caseId.eq(menucase.stringId).and(it.transitionId.eq("122"))}

					change tref value {
						return [task.stringId];
					}
				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>122</id>
		<x>740</x>
		<y>180</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Show Menu</label>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>menu_overview</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<!-- PLACES -->
	<place>
		<id>94</id>
		<x>740</x>
		<y>300</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>108</id>
		<type>regular</type>
		<sourceId>94</sourceId>
		<destinationId>69</destinationId>
		<multiplicity>1</multiplicity>
		<breakPoint><x>760</x><y>383</y></breakPoint>
	</arc>
	<arc>
		<id>121</id>
		<type>regular</type>
		<sourceId>69</sourceId>
		<destinationId>94</destinationId>
		<multiplicity>1</multiplicity>
		<breakPoint><x>718</x><y>382</y></breakPoint>
	</arc>
	<arc>
		<id>127</id>
		<type>regular</type>
		<sourceId>94</sourceId>
		<destinationId>95</destinationId>
		<multiplicity>1</multiplicity>
		<breakPoint><x>794</x><y>274</y></breakPoint>
	</arc>
	<arc>
		<id>128</id>
		<type>regular</type>
		<sourceId>95</sourceId>
		<destinationId>94</destinationId>
		<multiplicity>1</multiplicity>
		<breakPoint><x>792</x><y>319</y></breakPoint>
	</arc>
</document>
